1. JSON이란?
 - Java Script Object Notation: 자바 스크립트 객체 표기법
 - xml은 태그가 있고 복잡, data보다 tag가 더 많음
 - {속성명1: 속성값1}, {속성명2: 속성값2}
 - 객체 배열: [{속성명1: 속성값1}, {속성명2: 속성값2}]
 - Map: {키1:{속성명: 속성값} 키2:{속성명: 속성값}}

2. stringif()와 parse()
 - HTTP는 TEXT기반 프로토콜이므로 JS 객체를 서버로 전송하려면 직렬화가 필요
 - 서버가 보낸 데이터(JSON문자열)을 JS 객체로 변환할 때, 역직렬화가 필요
 - JSON.stringify(): 객체를 JSON형태의 문자열로 변환(직렬화, JS객체 -> 문자열)
 - JSON.parse(): JSON형태의 문자열을 객체로 변환(역직렬화, 문자열 -> JS객체)
 - {name: "leejp", age:30}     <-----> '{"name":"leejp", "age":30}'

3. Ajax란?
- Asynchronous Javscript and XML
- 요즘은 JSON을 주로 사용
- 비동기 통신으로 데이터를 주고 받기 위한 기술
- 동기: 서버에 데이터 호출하고 기다림
- 비동기: 서버에 데이터 호출하고 다음 할일 함
- 웹페이지 전체(data + UI)가 아닌 일부(data)만 업데이트 가능
-  jackson-databind: JSON <-> JAVA 객체
- @RequestBody: 요청 Body부분을 JAVA 객체로 자동 바꿔줌
- @ResponseBody: 서버의 응답을 클라이언트의 요청 Body로 보냄
- @RestController: @ResponseBody 생략 가능

4. REST란?
 - 2000년에 Roy Fielding이 제안한 웹서비스 디자인 아키텍쳐 접근 방식
 - REST 규약을 준수하는 API
 - API(Application Programming Interface): 제공하는 사람과 사용하는 사람과의 약속
 - 리소스(요청/) 중심의 API 디자인 - 여러 HTTP메소드(GET, POST, PUT, DELETE, FATCH등) 로 수행할 작업 정의

5. RESTful API 설계
 - 읽기 /comment/read?cno=번호 GET 지정된 번호의 댓글을 보여줌
 - 쓰기 /comment POST 작성한 게시물을 저장함
 - 삭제 /comment/{bno} DELETE 댓글을 삭제함
 - 수정 /comment PUT/PATCH POST 수정된 게시물 저장
-> 리소스(URI를 단순하게, 명사위주) 는 똑같고, 어떤일을 할 것인지는 HTTP 메서드들만 다르게 하여 개발 하자