1. 트랜잭션(Transaction)이란?
 - 더이상 나눌 수 없는 작업의 단위: insert, update 등...
 - 계좌 이체의 경우 출금과 입금이 하나의 Tx로 묶여야 됨
 - '모' 아니면 '도' 즉, 출금과 입금이 모두 성공하지 않으면 실패
   All or Notginh - 둘다 성공 하던가 하나만 실패해도 취소

2. 트랜잭션의 속성 - ACID
 - 원자성(Actomicity): 나눌 수 없는 하나의 작업으로 다뤄져야 한다.
 - 일관성(Consistency): Tx 수행 전과 후가 일관된 상태를 유지해야 한다.
 - 고립성(Isolation): 각 Tx는 독립적으로 수행되어야 한다.
 - 영속성(Durability): 성공한 Tx의 결과는 유지되어야 한다.

3. 커밋과 롤백
 - 커밋: 작업 내용을 DB에 영구적 저장
 - 롤백 - 최근 변경사항을 취소(마지막 커밋으로 북귀)

4. 자동 커밋과 수동 커밋
 - 자동 커밋: 명령 실행 후, 자동으로 커밋이 수행(롤백 불가)
 - 수동 커밋: 명령 실행 후 명시적으로 커밋 또는 롤백을 출력

5. 트랜잭션의 Isolation Level - 인텔리제이 콘솔창에서 확인 가능
 - Serializable: 직렬화, 고립도 가장 높음, 한번에 하나의 Tx만 독립적으로 수행, 직렬처리로 완성되면 일자임, 하나의 트랜잭션이 끝나지 않으면 running상태
 - Read Uncommitted: 커밋되지 않은 데이터도 읽기 가능
 - Read Committed: 커밋된 데이터만 읽기 가능
 - Repeatable Read: 기본 값,Tx 시작 후 다른 Tx의 변경은 무시 됨, 커밋을 해야 다른 Tx반영 됨(다른 Tx에서 커밋해도, 당사자가 커밋하지 않으면 안보임)