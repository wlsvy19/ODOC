서블릿
1. 서블릿이 없던 시절 JAVA로 웹 어플리케이션 만드는게 매우 어려웠음
    1)CGI(Common Gateway Interface) 기술의 한계: 초기에는 CGI 기술을 이용하여 동적인 웹 페이지를 생성하는 방법을 사용했습니다.
    그러나 CGI는 프로세스마다 새로운 프로세스를 생성하여 처리하기 때문에, 처리 속도가 느리고 서버 부하가 많이 걸려 문제가 발생했습니다.

    2)코드의 복잡성: 초기의 웹 어플리케이션은 코드가 HTML과 프로그래밍 언어의 혼합된 형태였습니다.
    이는 코드의 가독성이 떨어지고, 유지보수가 어려워졌습니다.

    3)세션 관리의 어려움: 초기의 웹 어플리케이션에서는 세션 관리를 위한 기술이 없었습니다.
    따라서 개발자가 직접 쿠키(Cookie)나 hidden 필드(Hidden Field)를 이용하여 세션 관리를 구현해야 했습니다.

    4)데이터베이스 연동의 복잡성: 초기의 웹 어플리케이션에서는 데이터베이스 연동을 위한 기술이 없었습니다.
    따라서 개발자가 JDBC(Java Database Connectivity)와 같은 기술을 이용하여 데이터베이스와 연동하는 코드를 직접 작성해야 했습니다.

2. 서블릿은 .java 파일에서 HTML 코드를 조작 하기 위해 발명됐다.
3. 하지만 .java파일에서 HTML코드를 조작하기에는 너무 노가다 였다. 오타날 확률도 많고.



JSP
1. Java Servlet Page의 약자
2. HTML 페이지에서 Java 코드를 사용한다.
3. .jsp파일에 핵심 비지니스 로직인 java코드와 화면에 보여질 HTML코드가 같이 있으니 유지보수하기 힘들었다.
4. 그래서 MVC 패턴이 나타났다.
5. MVC1은 전형적인 Model, View, Controller 이다. Controller에서 비즈니스 로직을 처리한다.
6. MVC2는 비즈니스 로직을 Service단에서 처리하고 DB접근을 Repository단에서 처리한다.