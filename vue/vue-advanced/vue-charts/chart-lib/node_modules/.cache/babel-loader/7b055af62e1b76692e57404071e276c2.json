{"ast":null,"code":"import BarChart from \"./components/BarChart.vue\";\nimport LineChart from \"./components/LineChart.vue\";\nexport default {\n  // 컴포넌트 속성 && 인스턴스 옵션\n  components: {\n    BarChart,\n    LineChart\n  },\n  data() {\n    return {\n      chartDataSet: this.getChartData()\n    };\n  },\n  methods: {\n    //3초뒤에 차트 그려주는 로직 뿌려주기 가능\n    getChartData() {\n      setTimeout(() => {\n        this.chartDataSet = [{\n          label: \"Bar Chart\",\n          data: [15, 19, 3, 5, 2, 3],\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n          borderWidth: 1\n        }];\n      });\n    }\n  },\n  // 등록한 컴포넌트에서 데이터 호출 할때 created 라이프사이클 훅 사용\n  created() {\n    // axios.get('요청URL')\n    // .then(response => this.chartDataSet = response.data)\n    // .catch(error => console.log(error))\n  }\n};","map":{"version":3,"mappings":"AASA;AACA;AAEA;EACA;EACAA;IACAC;IACAC;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;QACA;UACAC;UACAL;UACAM,kBACA,2BACA,2BACA,2BACA,2BACA,4BACA,0BACA;UACAC,cACA,yBACA,yBACA,yBACA,yBACA,0BACA,wBACA;UACAC;QACA;MACA;IACA;EACA;EACA;EACAC;IACA;IACA;IACA;EACA;AACA","names":["components","BarChart","LineChart","data","chartDataSet","methods","getChartData","setTimeout","label","backgroundColor","borderColor","borderWidth","created"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Chart.js</h1>\n    <bar-chart v-bind:propsdata=\"getChartData()\"/>\n    <line-chart></line-chart>\n  </div>\n</template>\n\n<script>\nimport BarChart from \"./components/BarChart.vue\";\nimport LineChart from \"./components/LineChart.vue\";\n\nexport default {\n  // 컴포넌트 속성 && 인스턴스 옵션\n  components: {\n    BarChart,\n    LineChart,\n  },\n  data() {\n    return {\n      chartDataSet: this.getChartData()\n    }\n  },\n  methods: {\n    //3초뒤에 차트 그려주는 로직 뿌려주기 가능\n    getChartData() {\n      setTimeout(()=>{\n        this.chartDataSet = [{\n            label: \"Bar Chart\",\n            data: [15, 19, 3, 5, 2, 3],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n            ],\n            borderWidth: 1,\n          }]\n      });\n    }\n  },\n  // 등록한 컴포넌트에서 데이터 호출 할때 created 라이프사이클 훅 사용\n  created() {\n    // axios.get('요청URL')\n    // .then(response => this.chartDataSet = response.data)\n    // .catch(error => console.log(error))\n  }\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}