{"ast":null,"code":"// 플러그인 만들어서 뺌\n//import Chart from \"chart.js/auto\";\n\nexport default {\n  // 상위 컴포넌트 데이터 받을 때 사용, 상위에선 v-bind:propsdata\n  props: ['propsdata'],\n  mounted() {\n    // document.getElementById는 컴포넌트가 생성 되서 붙어야 하기때문에 mounted안에 넣어야함\n    //const ctx = document.getElementById(\"barChart\");\n\n    // vue에서는 ref로 DOM에 접근\n    // 컴포넌트 기반에서는 각각 템플릿에서만 접근할 수 있는 ref 사용하는게 좋음\n    //var ctx = this.$refs.barChart.getContext(\"2d\"); \n\n    var myChart = new this.$_Chart(this.$refs.barChart.getContext(\"2d\"), {\n      type: \"bar\",\n      data: {\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n        datasets: this.propsdata\n        /*\r\n        [\r\n           \r\n          {\r\n            label: \"Bar Chart\",\r\n            data: [15, 19, 3, 5, 2, 3],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n          \r\n        ],\r\n        */\n      },\n\n      onHover: function () {\n        this.$emit('refresh:chart');\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n    console.log(myChart);\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA;;AAEA;EACA;EACAA;EACAC;IACA;IACA;;IAEA;IACA;IACA;;IAEA;MACAC;MACAC;QACAC;QACAC;QACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;MACA;;MACAC;QACA;MACA;MACAC;QACAC;UACAC;YACAC;UACA;QACA;MACA;IACA;IACAC;EACA;AACA","names":["props","mounted","type","data","labels","datasets","onHover","options","scales","y","beginAtZero","console"],"sourceRoot":"src/components","sources":["BarChart.vue"],"sourcesContent":["<template>\r\n  <canvas ref=\"barChart\" id=\"barChart\" width=\"400\" height=\"400\"></canvas>\r\n</template>\r\n\r\n<script>\r\n// 플러그인 만들어서 뺌\r\n//import Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  // 상위 컴포넌트 데이터 받을 때 사용, 상위에선 v-bind:propsdata\r\n  props: ['propsdata'],\r\n  mounted() {\r\n    // document.getElementById는 컴포넌트가 생성 되서 붙어야 하기때문에 mounted안에 넣어야함\r\n    //const ctx = document.getElementById(\"barChart\");\r\n\r\n    // vue에서는 ref로 DOM에 접근\r\n    // 컴포넌트 기반에서는 각각 템플릿에서만 접근할 수 있는 ref 사용하는게 좋음\r\n    //var ctx = this.$refs.barChart.getContext(\"2d\"); \r\n\r\n    var myChart = new this.$_Chart(this.$refs.barChart.getContext(\"2d\"), {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        datasets: this.propsdata\r\n        /*\r\n        [\r\n           \r\n          {\r\n            label: \"Bar Chart\",\r\n            data: [15, 19, 3, 5, 2, 3],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n          \r\n        ],\r\n        */\r\n      },\r\n      onHover: function() {\r\n        this.$emit('refresh:chart');\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n    console.log(myChart);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}