{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"List\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.loginUser1 && $options.loginUser1(...args))\n  }, \"Login\"), _hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", null, _toDisplayString(item), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";gCAIIA,oBAAa,YAAT,MAAI;;;uBAFVC,oBAMM,cALJD,oBAA0C;IAAjCE,OAAK,yCAAEC,mDAAU;KAAE,OAAK,GACjCC,UAAa,EACbJ,oBAEK,gCADHC,oBAAyCI,6BAAtBC,WAAK,EAAbC,IAAI;yBAAfN,oBAAyC,6BAAZM,IAAI","names":["_createElementVNode","_createElementBlock","onClick","$options","_hoisted_1","_Fragment","$data","item"],"sourceRoot":"","sources":["C:\\sw\\ODOC\\vue\\vue-advanced\\async-await\\src\\App.vue"],"sourcesContent":["<!-- eslint-disable vue/require-v-for-key -->\n<template>\n  <div>\n    <button @click=\"loginUser1\">Login</button>\n    <h1>List</h1>\n    <ul>\n      <li v-for=\"item in items\">{{ item }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      items: [],\n    };\n  },\n  methods: {\n    // Promise 사용한 비동기 처리 문법\n    loginUser1() {\n      axios\n        .get(\"https://jsonplaceholder.typicode.com/users/1\")\n        .then((response) => {\n          if (response.data.id === 1) {\n            console.log(\"로그인 되었습니다1.\");\n            axios.get(\"https://jsonplaceholder.typicode.com/todos\")\n            .then((response) => {\n              console.log(\"로그인 되었습니다2.\");\n              this.items = response.data;\n            });\n          }\n        })\n        .catch((error) => console.timeLog(error));\n    },\n\n    // async await 문법 적용\n    async loginUser2() {\n      var response = await axios.get(\"https://jsonplaceholder.typicode.com/users/1\");\n      if (response.data.id === 1) {\n        console.log(\"로그인 되었습니다1.\");\n        var list = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n        console.log(\"로그인 되었습니다2.\");\n        this.items = list.data;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}