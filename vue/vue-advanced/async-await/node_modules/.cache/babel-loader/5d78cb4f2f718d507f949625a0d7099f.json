{"ast":null,"code":"import axios from \"axios\";\nimport handleException from './utils/handle.js';\nexport default {\n  data() {\n    return {\n      items: []\n    };\n  },\n  methods: {\n    // 비동기처리-네트워크탭 가서 느린3g로 테스트\n    // 데이터가 나오지 않았는데 다음로직<로그인되었습니다> 출력\n    // Promise 사용한 비동기 처리 문법 -> then과 catch 문법 복잡함\\\n    // Promise의 then~catch는 네트워크or비동기 처리 예외만 처리\n    loginUser1() {\n      axios.get(\"https://jsonplaceholder.typicode.com/users/1\").then(response => {\n        if (response.data.id === 1) {\n          console.log(\"<로그인 되었습니다1.>\");\n          axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(response => {\n            console.log(\"<로그인 되었습니다2.>\");\n            this.items = response.data;\n          });\n        }\n      }).catch(error => console.timeLog(error));\n    },\n    // async await 문법 적용 -> 변수 사용하는거 처럼 직관적 코드로 변환\n    // try~catch는 자바스크립트, 네트워크, 비동기 등등 모든 예외처리 가능\n    async loginUser2() {\n      try {\n        var response = await axios.get(\"https://jsonplaceholder.typicode.com/users/1\");\n        if (response.data.id === 1) {\n          console.log(\"<로그인 되었습니다1.>\");\n          var list = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n          console.log(\"<로그인 되었습니다2.>\");\n          this.items = list.data;\n        }\n        // 예외처리->Promise then().catch()\n        // try안의 에러를 catch에서 다 잡음\n      } catch (error) {\n        //alert(\"비동기 신 에러!!\", error);\n        handleException(error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAYA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,eAAc,MAAO,mBAAkB;AAE9C,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACAC,UAAU,GAAG;MACXL,KAAI,CACDM,GAAG,CAAC,8CAA8C,EAClDC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACN,IAAI,CAACO,EAAC,KAAM,CAAC,EAAE;UAC1BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5BX,KAAI,CACDM,GAAG,CAAC,4CAA4C,EAChDC,IAAI,CAAEC,QAAQ,IAAK;YAClBE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;YAC5B,IAAI,CAACR,KAAI,GAAIK,QAAQ,CAACN,IAAI;UAC5B,CAAC,CAAC;QACN;MACF,CAAC,EACAU,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACI,OAAO,CAACD,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED;IACA;IACA,MAAME,UAAU,GAAG;MACjB,IAAI;QACF,IAAIP,QAAO,GAAI,MAAMR,KAAK,CAACM,GAAG,CAC5B,8CAA6C,CAC9C;QACD,IAAIE,QAAQ,CAACN,IAAI,CAACO,EAAC,KAAM,CAAC,EAAE;UAC1BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5B,IAAIK,IAAG,GAAI,MAAMhB,KAAK,CAACM,GAAG,CACxB,4CAA2C,CAC5C;UACDI,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5B,IAAI,CAACR,KAAI,GAAIa,IAAI,CAACd,IAAI;QACxB;QACA;QACA;MACF,EAAE,OAAOW,KAAK,EAAE;QACd;QACAZ,eAAe,CAACY,KAAK,CAAC;MACxB;IACF;EACF;AACF,CAAC","names":["axios","handleException","data","items","methods","loginUser1","get","then","response","id","console","log","catch","error","timeLog","loginUser2","list"],"sourceRoot":"","sources":["C:\\sw\\ODOC\\vue\\vue-advanced\\async-await\\src\\App.vue"],"sourcesContent":["<!-- eslint-disable vue/require-v-for-key -->\n<template>\n  <div>\n    <button @click=\"loginUser2\">Login</button>\n    <h1>List</h1>\n    <ul>\n      <li v-for=\"item in items\">{{ item }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport handleException from './utils/handle.js'\n\nexport default {\n  data() {\n    return {\n      items: [],\n    };\n  },\n  methods: {\n    // 비동기처리-네트워크탭 가서 느린3g로 테스트\n    // 데이터가 나오지 않았는데 다음로직<로그인되었습니다> 출력\n    // Promise 사용한 비동기 처리 문법 -> then과 catch 문법 복잡함\\\n    // Promise의 then~catch는 네트워크or비동기 처리 예외만 처리\n    loginUser1() {\n      axios\n        .get(\"https://jsonplaceholder.typicode.com/users/1\")\n        .then((response) => {\n          if (response.data.id === 1) {\n            console.log(\"<로그인 되었습니다1.>\");\n            axios\n              .get(\"https://jsonplaceholder.typicode.com/todos\")\n              .then((response) => {\n                console.log(\"<로그인 되었습니다2.>\");\n                this.items = response.data;\n              });\n          }\n        })\n        .catch((error) => console.timeLog(error));\n    },\n\n    // async await 문법 적용 -> 변수 사용하는거 처럼 직관적 코드로 변환\n    // try~catch는 자바스크립트, 네트워크, 비동기 등등 모든 예외처리 가능\n    async loginUser2() {\n      try {\n        var response = await axios.get(\n          \"https://jsonplaceholder.typicode.com/users/1\"\n        );\n        if (response.data.id === 1) {\n          console.log(\"<로그인 되었습니다1.>\");\n          var list = await axios.get(\n            \"https://jsonplaceholder.typicode.com/todos\"\n          );\n          console.log(\"<로그인 되었습니다2.>\");\n          this.items = list.data;\n        }\n        // 예외처리->Promise then().catch()\n        // try안의 에러를 catch에서 다 잡음\n      } catch (error) {\n        //alert(\"비동기 신 에러!!\", error);\n        handleException(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}