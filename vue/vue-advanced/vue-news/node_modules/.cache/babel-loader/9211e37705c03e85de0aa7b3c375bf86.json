{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport NewsView from '../views/NewsView.vue';\nimport AskView from '../views/AskView.vue';\nimport JobsView from '../views/JobsView.vue';\nimport UserView from '../views/UserView.vue';\nimport ItemView from '../views/ItemView.vue';\n//import createListView from '../views/CreateListView'\nimport bus from \"../utils/bus.js\";\nimport { store } from '../store/index.js';\nVue.use(VueRouter);\nexport const router = new VueRouter({\n  // URL에 #(해쉬)값 제거\n  mode: 'history',\n  routes: [\n  //URL 라우팅 정보\n  {\n    path: '/',\n    redirect: '/news' // 홈페이지 접속하자마자 news페이지 이동\n  }, {\n    //path: url 주소\n    path: '/news',\n    // name: 분기처리에 사용\n    name: 'news',\n    // component: url주소로 갔을 때 표시 될 컴포넌트\n    component: NewsView,\n    //component: createListView('NewsView',) // 하이오더 컴포넌트 -> CreateListView.vue\n\n    // 특정 URL로 접근할 때 인증 용도\n    beforeEnter: (to, from, next) => {\n      bus.$emit(\"start:spinner\");\n\n      // 1. 데이터 호출 시점-> actions 호출\n      store.dispatch(\"FETCH_LIST\", to.name) // 어디로 갈거야? = to 에 저장되있음\n      .then(() => {\n        bus.$emit(\"end:spinner\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, {\n    path: '/ask',\n    name: 'ask',\n    component: AskView\n    //component: createListView('AskView',) // 하이오더 컴포넌트 -> CreateListView.vue\n  }, {\n    path: '/jobs',\n    name: 'jobs',\n    component: JobsView\n    //component: createListView('JobsView',) // 하이오더 컴포넌트 -> CreateListView.vue\n  }, {\n    path: '/user/:id',\n    // route의 params를 받음\n    component: UserView\n  }, {\n    path: '/item/:id',\n    component: ItemView\n  }]\n});","map":{"version":3,"names":["Vue","VueRouter","NewsView","AskView","JobsView","UserView","ItemView","bus","store","use","router","mode","routes","path","redirect","name","component","beforeEnter","to","from","next","$emit","dispatch","then","catch","error","console","log"],"sources":["C:/sw/ODOC/vue/vue-advanced/vue-news/src/routes/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport NewsView from '../views/NewsView.vue'\r\nimport AskView from '../views/AskView.vue'\r\nimport JobsView from '../views/JobsView.vue'\r\nimport UserView from '../views/UserView.vue'\r\nimport ItemView from '../views/ItemView.vue'\r\n//import createListView from '../views/CreateListView'\r\nimport bus from \"../utils/bus.js\";\r\nimport { store } from '../store/index.js'\r\n\r\nVue.use(VueRouter)\r\nexport const router = new VueRouter({\r\n  // URL에 #(해쉬)값 제거\r\n  mode: 'history',\r\n  routes: [ //URL 라우팅 정보\r\n    {\r\n      path: '/',\r\n      redirect: '/news' // 홈페이지 접속하자마자 news페이지 이동\r\n    },\r\n    {\r\n      //path: url 주소\r\n      path: '/news',\r\n      // name: 분기처리에 사용\r\n      name: 'news',\r\n      // component: url주소로 갔을 때 표시 될 컴포넌트\r\n      component: NewsView,\r\n      //component: createListView('NewsView',) // 하이오더 컴포넌트 -> CreateListView.vue\r\n\r\n      // 특정 URL로 접근할 때 인증 용도\r\n      beforeEnter: (to, from, next) => {\r\n        bus.$emit(\"start:spinner\");\r\n\r\n        // 1. 데이터 호출 시점-> actions 호출\r\n        store.dispatch(\"FETCH_LIST\", to.name)  // 어디로 갈거야? = to 에 저장되있음\r\n          .then(() => {\r\n            bus.$emit(\"end:spinner\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    {\r\n      path: '/ask',\r\n      name: 'ask',\r\n      component: AskView\r\n      //component: createListView('AskView',) // 하이오더 컴포넌트 -> CreateListView.vue\r\n    },\r\n    {\r\n      path: '/jobs',\r\n      name: 'jobs',\r\n      component: JobsView\r\n      //component: createListView('JobsView',) // 하이오더 컴포넌트 -> CreateListView.vue\r\n    },\r\n    {\r\n      path: '/user/:id', // route의 params를 받음\r\n      component: UserView\r\n    },\r\n    {\r\n      path: '/item/:id',\r\n      component: ItemView\r\n    }\r\n\r\n  ]\r\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,KAAK,QAAQ,mBAAmB;AAEzCR,GAAG,CAACS,GAAG,CAACR,SAAS,CAAC;AAClB,OAAO,MAAMS,MAAM,GAAG,IAAIT,SAAS,CAAC;EAClC;EACAU,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE;EAAE;EACR;IACEC,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE,OAAO,CAAC;EACpB,CAAC,EACD;IACE;IACAD,IAAI,EAAE,OAAO;IACb;IACAE,IAAI,EAAE,MAAM;IACZ;IACAC,SAAS,EAAEd,QAAQ;IACnB;;IAEA;IACAe,WAAW,EAAE,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;MAC/Bb,GAAG,CAACc,KAAK,CAAC,eAAe,CAAC;;MAE1B;MACAb,KAAK,CAACc,QAAQ,CAAC,YAAY,EAAEJ,EAAE,CAACH,IAAI,CAAC,CAAE;MAAA,CACpCQ,IAAI,CAAC,MAAM;QACVhB,GAAG,CAACc,KAAK,CAAC,aAAa,CAAC;MAC1B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EACD;IACEZ,IAAI,EAAE,MAAM;IACZE,IAAI,EAAE,KAAK;IACXC,SAAS,EAAEb;IACX;EACF,CAAC,EACD;IACEU,IAAI,EAAE,OAAO;IACbE,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEZ;IACX;EACF,CAAC,EACD;IACES,IAAI,EAAE,WAAW;IAAE;IACnBG,SAAS,EAAEX;EACb,CAAC,EACD;IACEQ,IAAI,EAAE,WAAW;IACjBG,SAAS,EAAEV;EACb,CAAC;AAGL,CAAC,CAAC"},"metadata":{},"sourceType":"module"}