{"ast":null,"code":"import ListItem from \"../components/ListItem.vue\";\nimport bus from \"../utils/bus.js\";\nexport default {\n  components: {\n    ListItem\n  },\n  // vuex 로 처리->사용x\n  // data() {\n  //   return {\n  //     users: [],\n  //   };\n  // },\n  created() {\n    // 컴포넌트 생성되자마자 들어가는 로직\n    //var vm = this; // vue 컴포넌트를 바라보는 상태가 아니라서 변수 선언으로 바인딩 해줘야 함\n    // 프로미스 기반 API제공: new Promise() 객체 반환\n    /*\r\n    fetchNewsList()\r\n      .then((response) => {\r\n        this.users = response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n      */\n    // VUEX 사용-> actions 가져오려면 dispatch 사용(vuex 사이클 그림 참고)\n\n    bus.$emit(\"start:spinner\"); // create되면 바로 스피너 호출\n    setTimeout(() => {\n      this.$store.dispatch(\"FETCH_NEWS\").then(() => {\n        // actions.js에 fetchNewsList반환값이 promise라서 then 게속 사용 가능\n        console.log(\"fetched\");\n        bus.$emit(\"end:spinner\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }, 3000); // 타임아웃 걸어서 3초뒤에 받아옴\n\n    // this.$store.dispatch(\"FETCH_NEWS\")\n    //   .then(() => { // actions.js에 fetchNewsList반환값이 promise라서 then 게속 사용 가능\n    //     console.log(\"fetched\");\n    //     bus.$emit(\"end:spinner\");\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n\n    //bus.$emit(\"end:spinner\");\n  }\n};","map":{"version":3,"mappings":"AA4CA;AACA;AAEA;EACAA;IACAC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC;IACA;IACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA;;IAGAC;IACAC;MACA,mCACAC;QAAA;QACAC;QACAH;MACA,GACAI;QACAD;MACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACA;AACA","names":["components","ListItem","created","bus","setTimeout","then","console","catch"],"sourceRoot":"src/views","sources":["NewsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ListItem />\r\n    <!-- <ul class=\"news-list\">\r\n      <li v-for=\"item in this.$store.state.news\" class=\"post\"> -->\r\n    <!-- 포인트 영역(숫자나오는 영역)-->\r\n    <!-- <div class=\"points\">\r\n          {{ item.points }}\r\n        </div> -->\r\n    <!-- 기타 정보 영역: 유저 내용들-->\r\n    <!-- <div>\r\n          <p class=\"news-title\">\r\n            <a v-bind:href=\"item.url\">\r\n              {{ item.title }}\r\n            </a>\r\n          </p>\r\n          <small class=\"link-text\">\r\n            {{item.time_ago}} by\r\n            <router-link class=\"link-text\" v-bind:to=\"`/user/${item.user}`\">{{ item.user }}</router-link>\r\n          </small>\r\n        </div> -->\r\n    <!-- <a v-bind:href=\"item.url\">\r\n          {{ item.title }}\r\n        </a>\r\n        <small>\r\n          {{ item.time_ago }} by\r\n          <router-link v-bind:to=\"`/user/${item.user}`\">{{\r\n            item.user\r\n          }}</router-link>\r\n        </small> -->\r\n    <!-- </li>\r\n    </ul> -->\r\n    <!--\r\n    <p v-for=\"item in this.$store.state.news\">\r\n      <a v-bind:href=\"item.url\">* {{ item.title }}</a>\r\n      <small> \r\n        {{ item.time_ago }} by \r\n        <router-link v-bind:to=\"`/user/${item.user}`\">{{ item.user }}</router-link>\r\n      </small>\r\n    </p> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ListItem from \"../components/ListItem.vue\";\r\nimport bus from \"../utils/bus.js\";\r\n\r\nexport default {\r\n  components: {\r\n    ListItem,\r\n  },\r\n  // vuex 로 처리->사용x\r\n  // data() {\r\n  //   return {\r\n  //     users: [],\r\n  //   };\r\n  // },\r\n  created() {\r\n    // 컴포넌트 생성되자마자 들어가는 로직\r\n    //var vm = this; // vue 컴포넌트를 바라보는 상태가 아니라서 변수 선언으로 바인딩 해줘야 함\r\n    // 프로미스 기반 API제공: new Promise() 객체 반환\r\n    /*\r\n    fetchNewsList()\r\n      .then((response) => {\r\n        this.users = response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n      */\r\n    // VUEX 사용-> actions 가져오려면 dispatch 사용(vuex 사이클 그림 참고)\r\n    \r\n    \r\n    bus.$emit(\"start:spinner\"); // create되면 바로 스피너 호출\r\n    setTimeout(()=> {\r\n    this.$store.dispatch(\"FETCH_NEWS\")\r\n      .then(() => { // actions.js에 fetchNewsList반환값이 promise라서 then 게속 사용 가능\r\n        console.log(\"fetched\");\r\n        bus.$emit(\"end:spinner\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }, 3000);  // 타임아웃 걸어서 3초뒤에 받아옴\r\n\r\n    // this.$store.dispatch(\"FETCH_NEWS\")\r\n    //   .then(() => { // actions.js에 fetchNewsList반환값이 promise라서 then 게속 사용 가능\r\n    //     console.log(\"fetched\");\r\n    //     bus.$emit(\"end:spinner\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n\r\n    //bus.$emit(\"end:spinner\");\r\n  },\r\n};\r\n</script>\r\n\r\n<style >\r\n</style>"]},"metadata":{},"sourceType":"module"}