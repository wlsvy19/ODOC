{"ast":null,"code":"// import { mapState } from \"vuex\";\n//import { mapGetters } from \"vuex\";\nimport ListItem from \"../components/ListItem.vue\";\nexport default {\n  components: {\n    ListItem\n  }\n  //computed: {\n  // 표현식의 여러가지 방법->computed 사용\n\n  // 1 .computed에서 처리\n  // ask() {\n  //   return this.$store.state.ask_items;\n  // }\n\n  // 2. map 헬퍼 함수 사용\n  // ...mapState({\n  //   ask: state => state.ask_items\n  // })\n\n  // 3. map 헬퍼 함수 사용-store에 getters사용\n  // ...mapGetters({\n  //   // fetchedAsk: 'fetchedAsk'\n  //   askItems: 'fetchedAsk'\n\n  // })\n\n  // 4. map 헬퍼 함수 사용-store getters 바로 사용\n  //...mapGetters(['fetchedAsk'])\n  //},\n  //created() {\n  // var vm = this;\n  // 속성에 함수 붙으면 : fuction 생략 가능\n  // fetchAskList()\n  //   .then(function (response) {\n  //     console.log(response.data)\n  //     vm.ask = response.data;\n  //   })\n  //   .catch(function (error) {\n  //     console.log(error);\n  //   });\n  //this.$store.dispatch('FETCH_ASK');\n  //},\n};","map":{"version":3,"mappings":"AA8BA;AACA;AACA;AACA;EACAA;IACAC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA","names":["components","ListItem"],"sourceRoot":"src/views","sources":["AskView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ListItem />\r\n\r\n    <!-- <ul class=\"news-list\"> -->\r\n    <!--  v-for디렉티브는 in 뒤에 오는 ask배열을 반복하여 div태그 돌림, 결과를 in 앞에 있는 변수로 받음 -->\r\n    <!-- <div v-for=\"item in fetchedAsk\">* {{ item.title }}</div> -->\r\n      <!-- <li v-for=\"item in fetchedAsk\" class=\"post\"> -->\r\n        <!-- 포인트 영역(숫자나오는 영역)-->\r\n        <!-- <div class=\"points\">\r\n          {{ item.points }}\r\n        </div> -->\r\n        <!-- 기타 정보 영역: 유저 내용들-->\r\n        <!-- <div>\r\n          <p class=\"news-title\">\r\n            <router-link v-bind:to=\"`item/${item.id}`\">{{item.title}}</router-link>\r\n              {{ item.title }}\r\n            </a>\r\n          </p>\r\n          <small class=\"link-text\">\r\n            {{item.time_ago}} by\r\n            <router-link class=\"link-text\" v-bind:to=\"`/user/${item.user}`\">{{ item.user }}</router-link>\r\n          </small>\r\n        </div>\r\n      </li>\r\n    </ul>-->\r\n  </div> \r\n</template>\r\n\r\n<script>\r\n// import { mapState } from \"vuex\";\r\n//import { mapGetters } from \"vuex\";\r\nimport ListItem from \"../components/ListItem.vue\";\r\nexport default {\r\n  components: {\r\n    ListItem\r\n  },\r\n  //computed: {\r\n    // 표현식의 여러가지 방법->computed 사용\r\n\r\n    // 1 .computed에서 처리\r\n    // ask() {\r\n    //   return this.$store.state.ask_items;\r\n    // }\r\n    \r\n    // 2. map 헬퍼 함수 사용\r\n    // ...mapState({\r\n    //   ask: state => state.ask_items\r\n    // })\r\n\r\n    // 3. map 헬퍼 함수 사용-store에 getters사용\r\n      // ...mapGetters({\r\n      //   // fetchedAsk: 'fetchedAsk'\r\n      //   askItems: 'fetchedAsk'\r\n\r\n      // })\r\n\r\n      // 4. map 헬퍼 함수 사용-store getters 바로 사용\r\n      //...mapGetters(['fetchedAsk'])\r\n  //},\r\n  //created() {\r\n    // var vm = this;\r\n    // 속성에 함수 붙으면 : fuction 생략 가능\r\n    // fetchAskList()\r\n    //   .then(function (response) {\r\n    //     console.log(response.data)\r\n    //     vm.ask = response.data;\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(error);\r\n    //   });\r\n    //this.$store.dispatch('FETCH_ASK');\r\n  //},\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}