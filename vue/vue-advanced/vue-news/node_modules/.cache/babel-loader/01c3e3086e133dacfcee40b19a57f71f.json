{"ast":null,"code":"export default {\n  // vuex 로 처리->사용x\n  // data() {\n  //   return {\n  //     users: [],\n  //   };\n  // },\n  created() {\n    // 컴포넌트 생성되자마자 들어가는 로직\n    //var vm = this; // vue 컴포넌트를 바라보는 상태가 아니라서 변수 선언으로 바인딩 해줘야 함\n    // 프로미스 기반 API제공: new Promise() 객체 반환\n\n    /*\r\n    fetchNewsList()\r\n      .then((response) => {\r\n        this.users = response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n      */\n\n    // VUEX 사용-> actions 가져오려면 dispatch 사용(vuex 사이클 그림 참고)\n    this.$store.dispatch(\"FETCH_NEWS\");\n  }\n};","map":{"version":3,"mappings":"AA4CA;EACA;EACA;EACA;EACA;EACA;EACA;EACAA;IACA;IACA;IACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;IACA;EACA;AACA","names":["created"],"sourceRoot":"src/views","sources":["NewsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ul class=\"news-list\">\r\n      <li v-for=\"item in this.$store.state.news\" class=\"post\">\r\n        <!-- 포인트 영역(숫자나오는 영역)-->\r\n        <div class=\"points\">\r\n          {{ item.points }}\r\n        </div>\r\n        <!-- 기타 정보 영역: 유저 내용들-->\r\n        <div>\r\n          <p class=\"news-title\">\r\n            <a v-bind:href=\"item.url\">\r\n              {{ item.title }}\r\n            </a>\r\n          </p>\r\n          <small>\r\n            {{ item.time_ago }}\r\n            by\r\n            <router-link v-bind:to=\"`/user/${item.user}`\"></router-link>\r\n          </small>\r\n        </div>\r\n        <!-- <a v-bind:href=\"item.url\">\r\n          {{ item.title }}\r\n        </a>\r\n        <small>\r\n          {{ item.time_ago }} by\r\n          <router-link v-bind:to=\"`/user/${item.user}`\">{{\r\n            item.user\r\n          }}</router-link>\r\n        </small> -->\r\n      </li>\r\n    </ul>\r\n    <!--\r\n    <p v-for=\"item in this.$store.state.news\">\r\n      <a v-bind:href=\"item.url\">* {{ item.title }}</a>\r\n      <small> \r\n        {{ item.time_ago }} by \r\n        <router-link v-bind:to=\"`/user/${item.user}`\">{{ item.user }}</router-link>\r\n      </small>\r\n    </p> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // vuex 로 처리->사용x\r\n  // data() {\r\n  //   return {\r\n  //     users: [],\r\n  //   };\r\n  // },\r\n  created() {\r\n    // 컴포넌트 생성되자마자 들어가는 로직\r\n    //var vm = this; // vue 컴포넌트를 바라보는 상태가 아니라서 변수 선언으로 바인딩 해줘야 함\r\n    // 프로미스 기반 API제공: new Promise() 객체 반환\r\n\r\n    /*\r\n    fetchNewsList()\r\n      .then((response) => {\r\n        this.users = response.data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n      */\r\n\r\n    // VUEX 사용-> actions 가져오려면 dispatch 사용(vuex 사이클 그림 참고)\r\n    this.$store.dispatch(\"FETCH_NEWS\");\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.news-list {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.post {\r\n  list-style: none;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.points {\r\n  width: 80px;\r\n  height: 60px;\r\n  display: flex;\r\n  /* 수평 정렬 */\r\n  align-items: center;\r\n  /* 수직 정렬 */\r\n  justify-content: center;\r\n  /* vue logo hex color */\r\n  color: #42b883;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}